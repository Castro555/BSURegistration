package cv.ucc.bsuregistration;

import java.util.List;
import java.util.Map;

import javax.net.SocketFactory;

import examples.Config;
import me.legrange.mikrotik.*;
import me.legrange.mikrotik.impl.*;
import examples.*;
import java.io.File;
import java.util.Scanner;

public class BSURegistration {
	
	public static void main(String[] args) throws Exception {
		// TODO Auto-generated method stub
		
		List<BSURegistration> bsus;
		
		try {
			File file = new File("IpList.txt");
			Scanner scan = new Scanner(file);
			
			while(scan.hasNextLine()) {
				System.out.println(scan.nextLine());
				/*BSURegistration bsu = new BSURegistration();
				
				if(bsu.connect(scan.nextLine())) {
					bsu.getRegistration();
					bsu.disconnect();
				} else {
					System.out.println("Not connected");
				}*/
			}
			
			scan.close();
		} catch(Exception ex) {
			ex.printStackTrace();
		}
	}

	
	
	public BSURegistration() {
		super();
	}

	protected boolean connect(String address) throws Exception {
        try {
        	con = ApiConnection.connect(SocketFactory.getDefault(), address, ApiConnection.DEFAULT_PORT, 2000);
        	con.login(Config.USERNAME, Config.PASSWORD);
        	return true;
        } catch(ApiConnectionException ex) {        	
        	return false;
        }
    }

    protected void disconnect() throws Exception {
        con.close();
    }
    
    protected void getRegistration() throws MikrotikApiException, InterruptedException {
    	List<Map<String, String>> results 
    		= con.execute("/interface/wireless/registration-table/print count-only");
        
    	for (Map<String, String> result : results) {
    		String count;
            System.out.println(result);
        }
    }
    
    protected ApiConnection con;
    protected String ip;
    protected String registratio;
}
