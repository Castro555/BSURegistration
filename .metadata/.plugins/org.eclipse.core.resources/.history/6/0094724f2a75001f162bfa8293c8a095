package cv.ucc.bsuregistration;

import java.util.Map;

import javax.net.SocketFactory;

import examples.Config;
import me.legrange.mikrotik.*;
import me.legrange.mikrotik.impl.*;
import examples.*;

public class BSURegistration {

	
	
	public static void main(String[] args) throws Exception {
		// TODO Auto-generated method stub
		
		BSURegistration bsu = new BSURegistration();
		
		bsu.connect();
		bsu.getRegistration();
		bsu.disconnect();
	}

	
	
	public BSURegistration() {
		super();
	}

	protected void connect() throws Exception {
        con = ApiConnection.connect(SocketFactory.getDefault(), Config.HOST, ApiConnection.DEFAULT_PORT, 2000);
        con.login(Config.USERNAME, Config.PASSWORD);
    }

    protected void disconnect() throws Exception {
        con.close();
    }
    
    protected void getRegistration() throws MikrotikApiException, InterruptedException {
    	String id = con.execute("/interface/wireless/registration-table/print count-only", new ResultListener() {
            private int prev = 0;

            public void receive(Map<String, String> result) {
                System.out.println(result);
 /*               int val = Integer.parseInt(result.get("signal-strength"));
                String sym = (val == prev) ? " " : ((val < prev) ? "-" : "+");
                System.out.printf("%d %s\n", val, sym);
                prev = val;
   */          }

            @Override
            public void error(MikrotikApiException ex) {
                throw new RuntimeException(ex.getMessage(), ex);
            }

            @Override
            public void completed() {
            	//System.out.println(result);
            }


         });
        // let it run for 60 seconds 
        Thread.sleep(60000);
        
        con.cancel(id);
    }
    
    protected ApiConnection con;
}
